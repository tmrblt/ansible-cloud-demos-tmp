---
- name: Create GCP resources and then create a GCP instance
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    gcp_project: openenv-r2rg7
    gcp_zone: us-east1-b
    gcp_region: us-east1  
    vm_name: 'test'
    network_name: "demo-network"
    subnet_name: "demo-subnet"
  tasks:
    - name: Create a disk
      google.cloud.gcp_compute_disk:
        name: "disk{{ vm_name }}"
        size_gb: 50
        source_image: "projects/rhel-cloud/global/images/rhel-8-v20231010"
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
      register: disk

    - name: Create a Google Virtual Private Cloud (VPC) network
      google.cloud.gcp_compute_network:
        name: "{{ network_name }}"
        auto_create_subnetworks: 'false'
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
      register: network
      
    - name: Create a subnetwork
      google.cloud.gcp_compute_subnetwork:
        name: "{{ subnet_name }}"
        region: us-east1
        network: "{{ network }}"
        ip_cidr_range: 10.0.0.0/24
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
      register: subnet

    - name: Create an IPv4 public IP address for vm
      google.cloud.gcp_compute_address:
        name: vm_public_ip
        region: "{{ gcp_region }}"
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
      register: vm_public_ip
    
    - name: Create a firewall rule to allow SSH
      google.cloud.gcp_compute_firewall:
        name: access_rules
        allowed:
          - ip_prptpcol: icmp
          - ip_protocol: tcp
            ports:
              - '22'
              - '80'
              - '443'
        project: "{{ gcp_project }}"
        network: "{{ network }}"
        auth_kind: serviceaccount
        state: present
      register: firewall_rules

    - name: Create the VM instances
      google.cloud.gcp_compute_instance:
        name: "{{ vm_name }}"
        machine_type: e2-standard-4
        disks:
          - auto_delete: 'true'
            boot: 'true'
            source: "{{ disk }}"
          - auto_delete: 'true'
            interface: NVME
            type: SCRATCH
            initialize_params:
              disk_type: pd-standard
        labels:
          environment: production
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: External NAT
                nat_ip: "{{ vm_public_ip }}"
                type: ONE_TO_ONE_NAT
            subnetwork: "{{ subnet }}"
        zone: "{{ gcp_zone }}"
        project: "{{ gcp_project }}"
        auth_kind: serviceaccount
        state: present
